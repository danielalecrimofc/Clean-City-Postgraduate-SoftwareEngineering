name: Publish Docker Image and Create Release

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract project name from pom.xml
        id: extract_project_name
        run: |
          PROJECT_NAME=$(grep -m1 -oP '(?<=<artifactId>)[^<]+' pom.xml)
          echo "PROJECT_NAME=$PROJECT_NAME" >> $GITHUB_ENV

      - name: Convert repository owner to lowercase
        id: convert_owner
        run: |
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV

      # Login to GitHub Container Registry using PAT_TOKEN
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ env.REPO_OWNER }}/${{ env.PROJECT_NAME }}:${{ github.sha }} .

      - name: Push Docker image to GitHub Packages
        run: docker push ghcr.io/${{ env.REPO_OWNER }}/${{ env.PROJECT_NAME }}:${{ github.sha }}

      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(grep -m1 -oP '(?<=<version>)[^<]+' pom.xml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: "Release ${{ env.VERSION }}"
          draft: false
          prerelease: false
